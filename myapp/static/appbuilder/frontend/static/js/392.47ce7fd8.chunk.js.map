{"version":3,"file":"static/js/392.47ce7fd8.chunk.js","mappings":"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","sources":["api/swallowApi.ts","components/TitleHeader/TitleHeader.tsx","pages/Swallow/OrderStatus.tsx"],"sourcesContent":["import axios, { AxiosResFormat, ResponseFormat } from '.'\nimport { IInstanceManagerItem, IInstanceManagerParams, ITaskManagerParams, ITaskManagerItem, ITaskDependencyItem, IActionRecordParam, IActionRedoParams, IActionKillParams, IInstanceLogParams, IActionFreezeParams, IHistoryItem, IPendingItem } from './interface/swallowInterface';\nimport Axios from 'axios';\n\nconst baseURL = 'http://swallow.tmeoa.com'\n\nexport const getInstanceManagerList = (params: IInstanceManagerParams): AxiosResFormat<IInstanceManagerItem[]> => {\n    return axios.get('/java/api/swallow/task/instances/get', { params, baseURL })\n}\n\nexport const getTaskManagerList = (params: ITaskManagerParams): AxiosResFormat<{\n    data: {\n        list: ITaskManagerItem[],\n        pageIndex: number,\n        pageSize: number,\n        sortItem: string,\n        sortType: string,\n        totalSize: number\n    }\n}> => {\n    return axios.get('/java/api/swallow/task/tasks/get', { params, baseURL })\n}\nexport const getTaskDependencyList = (params: { taskId: string | number }): AxiosResFormat<{\n    // list: ITaskDependencyItem[],\n    // pageIndex: number,\n    // pageSize: number,\n    // sortItem: string,\n    // sortType: string,\n    // totalSize: number\n    parent: ITaskDependencyItem[],\n    son: ITaskDependencyItem[]\n}> => {\n    return axios.get('/java/api/swallow/task/us/task/dependency', { params, baseURL })\n}\n\nexport const actionRecord = (params: IActionRecordParam): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/task/recording', { params, baseURL })\n}\n\nexport const actionRedo = (params: IActionRedoParams): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/task/redo', { params, baseURL })\n}\n\nexport const actionMultiRedo = (params: { list: IActionRedoParams[], userName: string }): AxiosResFormat<{}> => {\n    return axios.post('/java/api/swallow/task/us/task/redo', params, { baseURL })\n}\n\nexport const actionKill = (params: IActionKillParams): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/task/kill', { params, baseURL })\n}\n\nexport const actionFreeze = (params: IActionFreezeParams): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/tasks/freeze', { params, baseURL })\n}\n\nexport const actionUnFreeze = (params: { taskIds: string }): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/tasks/unfreeze', { params, baseURL })\n}\n\nexport const actionChangeDuty = (params: { inCharges: string[], modifier: string, usTaskId: string }): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/replace/incharge', { params, baseURL })\n}\n\nexport const getInstanceLog = (params: IInstanceLogParams): Promise<{ data: string }> => {\n    return axios.get('/java/api/swallow/task/us/instance/log', { params, baseURL })\n}\n\nexport const actionMultiTaskDelete = (params: { id: string }): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/tasks/delete', { params, baseURL })\n}\n\nexport const showCustomData = (params: { type: string, code: string, args: string }): Promise<{ data: string }> => {\n    return axios.get('/java/api/swallow/check/get/info', { params, baseURL })\n}\n\n//获取工单状态\nexport const getOrderStatus = (params: { instanceId: string | undefined }): Promise<{\n    data: {\n        data: {\n            instance_detail: {\n                history_data: IHistoryItem[],\n                pending_data: IPendingItem[],\n                process_key: string\n            }\n        }\n    }\n}> => {\n    return axios.get('/java/api/privacy/task/detail', { params, baseURL })\n}","import React, { ReactNode } from 'react';\nimport { Row, Typography, Col, Space } from 'antd';\nimport './TitleHeader.less';\n\nconst { Title } = Typography;\n\ninterface IProps {\n    title: ReactNode | string;\n    children?: ReactNode;\n    noBorderBottom?: boolean;\n    breadcrumbs?: ReactNode | string;\n}\n\nconst TitleHeader = (props: IProps) => {\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\n    return (\n        <Row\n            className=\"title-header\"\n            justify=\"space-between\"\n            align=\"middle\"\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\n            <div>\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\n                    {props.title}\n                </Title>\n                <div className=\"d-il\">\n                    {props.breadcrumbs}\n                </div>\n            </div>\n\n            <Col>\n                <Space>{props.children ? props.children : null}</Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default TitleHeader;\n","import React, { useState } from 'react'\nimport TitleHeader from '../../components/TitleHeader/TitleHeader'\nimport { Input, Button, Spin, Steps, Empty } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { getOrderStatus } from '../../api/swallowApi'\nimport { IHistoryItem, IHistoryNode, IPendingItem, IPendingNode } from '../../api/interface/swallowInterface'\nimport styled from \"@emotion/styled\";\n\n\nconst loadingIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\nconst { Step } = Steps\n\n//handle history_data\nconst handleHistoryData = (history_data: IHistoryItem[]) => {\n    const historyNodes:IHistoryNode[] = Array.from(new Set(history_data.map(i => i.task_name))).map(task_name => {\n      return {\n        task_name,\n        approvals: []\n      }\n    })\n    history_data.forEach(item => {\n      const historyNode = historyNodes.find(node => node.task_name === item.task_name)\n      historyNode?.approvals.push(item)\n    })\n    return historyNodes\n}\n\n//handle pending_data\nconst handlePendingData = (pending_data: IPendingItem[]) => {\n  const pendingNodes:IPendingNode[] = Array.from(new Set(pending_data.map(i => i.task_name))).map(task_name => {\n    return {\n      task_name,\n      handlers: []\n    }\n  })\n  pending_data.forEach(item => {\n    const historyNode = pendingNodes.find(node => node.task_name === item.task_name)\n    historyNode?.handlers.push(item)\n  })\n  return pendingNodes\n}\n\n//handle single history process node\nconst handleApprovals = (approvals: IHistoryItem[]): JSX.Element => \n<div className='d-f fd-c'>\n  {\n    approvals.map(({ step_user, step_user_name, step_action_name, step_approval_time, submit_source }) => {\n      return (\n        <ApprovalDiv key={step_user}>\n          <span>{`${step_user}(${step_user_name})`}</span>\n          <strong>{step_action_name}</strong>\n          <span>{step_approval_time}</span>\n          <span>{submit_source}</span>\n        </ApprovalDiv>\n      )\n    })\n  }\n</div>\n\n//handle single pending process node\nconst handleWait = (wait: IPendingItem[]): JSX.Element => \n<div className='w80'>    \n  {\n    wait.map(({handler, handler_name}) => {\n      return (\n        <WaitDiv key={handler}>\n          <span>{`${handler}(${handler_name})`}</span>\n          <strong>待审批</strong>\n        </WaitDiv>\n      )\n    })\n  }    \n</div>\n\nexport default function OrderStatus() {\n  const [projectId, setProjectId] = useState<string | undefined>('')\n  const [loading, setLoading] = useState(false)\n  const [hasData, setHasData] = useState(false)\n  const [historyList, setHistoryList] = useState<IHistoryNode[] | null>(null)\n  const [pendingList, setPndingList] = useState<IPendingNode[] | null>(null)\n\n  const fetchData = () => {\n    setLoading(true)\n    const instanceId = projectId\n    getOrderStatus({instanceId}).then(res => {\n      if (res.data.data && res.data.data.instance_detail) {\n        setHasData(true)\n        const { history_data, pending_data } = res.data.data.instance_detail\n        setHistoryList(handleHistoryData(history_data))\n        setPndingList(handlePendingData(pending_data))\n      }\n      else {\n        setHasData(false)\n      }\n    }).finally(() => {\n      setLoading(false)\n    });\n  }\n\n  return (\n    <>\n      <TitleHeader title=\"工单状态查看\" />\n      <div className='d-f mt16 mb26'>\n        <div className=\"mr16 d-f ac\">\n          <span className=\"ta-r s0 mr10\" style={{ width: 80 }}>项目ID</span>\n          <Input onPressEnter={fetchData} placeholder=\"项目ID\" style={{ width: 256 }} value={projectId} onChange={(e) => setProjectId(e.target.value)} />\n        </div>\n        <Button type=\"primary\" onClick={fetchData}>\n          搜索\n        </Button>\n      </div>\n      <Spin indicator={loadingIcon} spinning={loading}>\n        <div className='d-f ml40 ptb20' style={{width: '500px'}} >\n          {\n            hasData ?\n            <CustomSteps direction=\"vertical\" current={historyList? historyList.length - 1 : 0} progressDot>\n              {/* 审批历史 */}\n              {\n                historyList?.map(({ task_name, approvals }) => {\n                  return (\n                    <Step key={task_name} title={task_name} description={handleApprovals(approvals)} />\n                  )\n                })\n              }\n              {/* 等待审批 */}\n              {\n                pendingList?.map(({ task_name, handlers }) => {\n                  return (\n                    <Step key={task_name} title={task_name} description={handleWait(handlers)} />\n                  )\n                })\n              }\n            </CustomSteps>    \n              :\n            <Empty />\n          }\n        </div>\n      </Spin>\n    </>\n  )\n}\n\nconst CustomSteps = styled(Steps)`\n  width: 100%;\n  & .ant-steps-item-tail::after {\n    width: 2px !important;\n    margin-left: 12px !important;\n  }\n  & .ant-steps-item-wait {\n    opacity: .7;\n  }\n  & .ant-steps-item-title {\n    font-weight: bold;\n  }\n`;\n\nconst ApprovalDiv = styled.div`\n  display: flex;\n  color: #000000;\n  &>strong {\n    color: #1672fa;\n  }\n  &>* {\n    margin-right: 10px;\n  }\n`;\n\nconst WaitDiv = styled.div`\n  &>span {\n    margin-right: 10px;\n  }\n  &>strong {\n    color: #1672fa;\n  }\n`;"],"names":["baseURL","getInstanceManagerList","params","axios","getTaskManagerList","getTaskDependencyList","actionRecord","actionMultiRedo","actionKill","actionFreeze","actionUnFreeze","actionChangeDuty","getInstanceLog","actionMultiTaskDelete","showCustomData","getOrderStatus","Title","Typography","props","styles","position","top","className","justify","align","style","noBorderBottom","borderBottom","level","marginBottom","title","breadcrumbs","children","loadingIcon","fontSize","spin","Step","Steps","handleApprovals","approvals","map","step_user","step_user_name","step_action_name","step_approval_time","submit_source","ApprovalDiv","OrderStatus","useState","projectId","setProjectId","loading","setLoading","hasData","setHasData","historyList","setHistoryList","pendingList","setPndingList","fetchData","instanceId","then","res","data","instance_detail","history_data","pending_data","historyNodes","Array","from","Set","i","task_name","forEach","item","historyNode","find","node","push","handleHistoryData","pendingNodes","handlers","handlePendingData","finally","width","onPressEnter","placeholder","value","onChange","e","target","type","onClick","indicator","spinning","CustomSteps","direction","current","length","progressDot","description","wait","handler","handler_name","WaitDiv","styled"],"sourceRoot":""}