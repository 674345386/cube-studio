{"version":3,"file":"static/js/715.67b47c66.chunk.js","mappings":"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","sources":["api/clickhouseApi.ts","components/CodeEdit.tsx","components/TableBox/TableBox.tsx","components/TitleHeader/TitleHeader.tsx","pages/Swallow/TaskStatusList.tsx","../node_modules/antd/lib/layout/layout.js"],"sourcesContent":["import { AxiosResponse } from 'axios'\nimport axios, { AxiosResFormat } from '.'\nimport { IClickHouseTaskItem, IDatabaseDetailItem } from './interface/clickhouseInterface'\nconst BASE_URL = 'http://musichouse.data.tme.woa.com'\n\nconst FEITIAN_URL = 'http://fetian.gateway.tme.woa.com'\n\nexport const getDatabaseList = (params: {\n    database?: string\n    table?: string\n    owner?: string\n}): Promise<AxiosResponse<IDatabaseDetailItem[]>> => {\n    return axios.get('/api/v1/getDatabasesOverview', { params, baseURL: BASE_URL })\n}\n\nexport const actionUpdateTTL = (params: {\n    swallowTaskId: number\n    db: string\n    tb: string\n    lifecycle: string\n}): Promise<AxiosResponse<{}>> => {\n    return axios.get('/api/swallow/lifecycle/offline/set', { params })\n}\n\nexport const getStatusList = (taskStatusKey: string): Promise<AxiosResponse<{ taskInfoList: IClickHouseTaskItem[] }>> => {\n    return axios.get('/getExecutingTasks', { params: { taskStatusKey }, baseURL: FEITIAN_URL })\n}\n\nexport const actionStopClickhouseTask = (task_id: number | string): Promise<AxiosResponse<{}>> => {\n    return axios.get('/kill', { params: { task_id }, baseURL: FEITIAN_URL })\n}","import React, { useEffect, useState } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\n// 主题\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/solarized.css';\n// 代码模式\nimport 'codemirror/mode/sql/sql';\n// 代码补全\nimport 'codemirror/addon/hint/show-hint.css'\nimport 'codemirror/addon/hint/sql-hint';\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/hint/anyword-hint.js';\n//折叠代码\nimport 'codemirror/addon/fold/foldgutter.css';\nimport 'codemirror/addon/fold/foldcode.js';\nimport 'codemirror/addon/fold/foldgutter.js';\nimport 'codemirror/addon/fold/brace-fold.js';\nimport 'codemirror/addon/fold/comment-fold.js';\n// 代码高亮\nimport 'codemirror/addon/selection/active-line';\n\ninterface IProps {\n  value?: string;\n  onChange?: (value: string) => void;\n  onSelect?: (value: string) => void\n  readonly?: boolean\n}\n\n// https://github.com/scniro/react-codemirror2\n// https://xudany.github.io/codemirror/2020/07/21/CodeMirror%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%90%E7%A4%BA%E5%8A%9F%E8%83%BD/\nexport default function CodeEdit(props: IProps) {\n  const [instance, setInstance] = useState<any>(null);\n\n  return (\n    <>\n      <CodeMirror\n        editorDidMount={(editor) => {\n          setInstance(editor);\n        }}\n        value={props.value || ''}\n        options={{\n          placeholder: '输入SQL进行查询',\n          mode: 'sql',\n          theme: 'solarized',\n          lineNumbers: true,\n          smartIndent: true,\n          lineWrapping: true,\n          styleActiveLine: true,\n          foldGutter: true,\n          matchBrackets: true, //括号匹配，光标旁边的括号都高亮显示\n          autoCloseBrackets: true, //键入时将自动关闭()[]{}''\"\"\n          gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],\n          extraKeys: { Ctrl: 'autocomplete' },\n          hintOptions: {\n            completeSingle: false,\n            alignWithWord: true\n          },\n        }}\n        onCursorActivity={(editor) => {\n          // console.log(editor.getSelection())\n          const value = editor.getSelection()\n          props.onSelect && props.onSelect(value)\n        }}\n        onBeforeChange={(editor, data, value) => {\n          if (!props.readonly) {\n            if (data.origin !== 'complete') {\n              editor.execCommand('autocomplete');\n            }\n            props.onChange && props.onChange(value);\n          }\n        }}\n      // onChange={(editor, data, value) => {\n      //   console.log(editor, data, value)\n      //   props.onChange && props.onChange(value);\n      // }}\n      />\n    </>\n  );\n}\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\nimport ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst customizeRenderEmpty = () => (\n\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t<div>暂无数据</div>\n\t</Row>\n);\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== '操作');\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\tconst handleClickOutputExcel = () => {\n\t\tconst option: any = {};\n\t\toption.fileName = 'result';\n\t\toption.datas = [\n\t\t\t{\n\t\t\t\tsheetData: dataFormat.data,\n\t\t\t\tsheetName: 'sheet',\n\t\t\t\tsheetHeader: dataFormat.header,\n\t\t\t},\n\t\t];\n\t\tconst toExcel = new ExportJsonExcel(option);\n\t\ttoExcel.saveExcel();\n\t};\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={'导出数据'}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">选择需要导出的列：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t全选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t反选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t导出数据\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import React, { ReactNode } from 'react';\nimport { Row, Typography, Col, Space } from 'antd';\nimport './TitleHeader.less';\n\nconst { Title } = Typography;\n\ninterface IProps {\n    title: ReactNode | string;\n    children?: ReactNode;\n    noBorderBottom?: boolean;\n    breadcrumbs?: ReactNode | string;\n}\n\nconst TitleHeader = (props: IProps) => {\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\n    return (\n        <Row\n            className=\"title-header\"\n            justify=\"space-between\"\n            align=\"middle\"\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\n            <div>\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\n                    {props.title}\n                </Title>\n                <div className=\"d-il\">\n                    {props.breadcrumbs}\n                </div>\n            </div>\n\n            <Col>\n                <Space>{props.children ? props.children : null}</Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default TitleHeader;\n","import React, { ReactText, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Spin, Form, Tag, Popover, Tooltip, Select } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport TitleHeader from '../../components/TitleHeader/TitleHeader';\nimport TableBox from '../../components/TableBox/TableBox';\nimport { CopyOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { getTableScroll } from '../../util';\nimport { actionStopClickhouseTask, getStatusList } from '../../api/clickhouseApi';\nimport { IClickHouseTaskItem } from '../../api/interface/clickhouseInterface';\nimport CodeEdit from '../../components/CodeEdit';\nimport moment from \"moment\";\n\nexport default function TaskStatusList() {\n    const [dataList, _setDataList] = useState<IClickHouseTaskItem[]>([]);\n    const dataListRef = useRef(dataList);\n    const setDataList = (data: IClickHouseTaskItem[]): void => {\n        dataListRef.current = data;\n        _setDataList(data);\n    };\n    const [isSqlVisable, setIsSqlVisable] = useState(false)\n    const [loading, setLoading] = useState(false);\n    const [scrollY, setScrollY] = useState(\"\")\n    const [timeCount, _setTimeCount] = useState(0);\n    const timeCountRef = useRef(timeCount);\n    const setTimeCount = (data: number): void => {\n        timeCountRef.current = data;\n        _setTimeCount(data);\n    };\n    const [currentDataItem, setCurrentDataItem] = useState<IClickHouseTaskItem>()\n    const [taskStatusKey, _setTaskStatusKey] = useState('task_status')\n    const taskStatusKeyRef = useRef(taskStatusKey);\n    const setTaskStatusKey = (data: string): void => {\n        taskStatusKeyRef.current = data;\n        _setTaskStatusKey(data);\n    };\n\n    useEffect(() => {\n        setScrollY(getTableScroll())\n    }, [])\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            if (!loading) {\n                setTimeCount(timeCountRef.current + 10)\n            }\n            if (timeCountRef.current > 100) {\n                fetchData()\n                setTimeCount(0)\n            }\n        }, 1000)\n\n        return () => {\n            clearInterval(timer)\n        }\n    }, [])\n\n    const fetchData = (key = taskStatusKeyRef.current) => {\n        setLoading(true);\n        getStatusList(key)\n            .then((res) => {\n                const { taskInfoList } = res.data\n                const itemMap = new Map<string, IClickHouseTaskItem>()\n                for (let i = 0; i < taskInfoList.length; i++) {\n                    const item = taskInfoList[i];\n                    item.count = 1\n                    itemMap.set(item.taskId, item)\n                }\n\n                for (let i = 0; i < dataListRef.current.length; i++) {\n                    const item = dataListRef.current[i];\n                    const oldItem = itemMap.get(item.taskId)\n                    if (oldItem) {\n                        oldItem.count = item.count + 1\n                        itemMap.set(oldItem.taskId, oldItem)\n                    }\n                }\n\n                const tarList = [...(itemMap.values() as any)]\n                    .sort((a: IClickHouseTaskItem, b: IClickHouseTaskItem) => b.count - a.count)\n                    .map((item: IClickHouseTaskItem) => ({\n                        ...item,\n                        sql: item.sql.replaceAll('&apos;', \"'\").replaceAll('&quot;', '\"'),\n                        duration: new Date().valueOf() - new Date(item.startTimestamp).valueOf()\n                    }))\n\n\n                setDataList(tarList);\n            })\n            .finally(() => setLoading(false));\n    };\n\n    return (\n        <div className=\"p-r\">\n            {\n                !loading ? <progress max=\"100\" value={timeCountRef.current} className=\"progress-loading-g\" id=\"progress_loading\"></progress> : null\n            }\n            <Modal\n                title={<>\n                    <span className=\"pr16\">SQL：{currentDataItem?.userName}</span>\n                    <span className=\"pr16\">ChartId：{currentDataItem?.referredChartId}</span>\n                    <span className=\"pr16\">DashboardId：{currentDataItem?.referredDashboardId}</span>\n                </>}\n                destroyOnClose\n                visible={isSqlVisable}\n                footer={null}\n                width={1700}\n                onCancel={() => { setIsSqlVisable(false) }}>\n                <CodeEdit value={currentDataItem?.sql} readonly />\n                <div className=\"pt16 ta-r\">\n                    <CopyToClipboard text={currentDataItem?.sql || ''} onCopy={() => {\n                        message.success('已成功复制到粘贴板')\n                    }}>\n                        <Button type=\"primary\">复制</Button>\n                    </CopyToClipboard>\n                </div>\n            </Modal>\n            <TitleHeader title=\"任务状态列表\" />\n            <Content className=\"appmgmt-content p16\">\n                <TableBox\n                    titleNode={<Col className=\"tablebox-title\">任务列表</Col>}\n                    buttonNode={<div className=\"d-f ac\">\n                        <div className=\"mr32\">\n                            <span>当前集群：</span>\n                            <Select style={{ width: 120 }} value={taskStatusKey} options={[\n                                { label: '飞天', value: 'task_status' },\n                                { label: '腾飞', value: 'task_status_tengfei' },\n                                { label: 'joox', value: 'task_status_joox' }\n                            ]} onChange={(value) => {\n                                setTaskStatusKey(value)\n                                fetchData(value)\n                            }} /></div>\n                        <div className=\"mr16\">总任务数：<strong>{dataListRef.current.length}</strong></div>\n                    </div>}\n                    rowKey={(record: IClickHouseTaskItem) => {\n                        return record.taskId\n                    }}\n                    columns={[\n                        {\n                            title: '持续时间',\n                            dataIndex: 'duration',\n                            key: 'duration',\n                            width: 100,\n                            align: 'right',\n                            fixed: 'left',\n                            sorter: (a: IClickHouseTaskItem, b: IClickHouseTaskItem) => b.duration - a.duration,\n                            render: (text: any, record: IClickHouseTaskItem) => {\n                                const currentSec = Math.floor(record.duration / 1000)\n                                const timeFormat = moment.duration(currentSec, 's').toJSON().replace('PT', '').replace('H', '<span style=\"font-size:12px;\">小时</span>').replace('M', '<span style=\"font-size:12px;\">分钟</span>').replace('S', '<span style=\"font-size:12px;\">秒</span>')\n                                if (currentSec >= 60 && currentSec <= 120) {\n                                    return <span><strong className=\"c-warn fs18\" dangerouslySetInnerHTML={{ __html: timeFormat }}></strong></span>\n                                } else if (currentSec > 120) {\n                                    return <span><strong className=\"c-fail fs18\" dangerouslySetInnerHTML={{ __html: timeFormat }}></strong></span>\n                                } else {\n                                    return <span><strong className=\"c-success fs18\" dangerouslySetInnerHTML={{ __html: timeFormat }}></strong></span>\n                                }\n                            }\n                        },\n                        {\n                            title: '用户名',\n                            dataIndex: 'userName',\n                            key: 'userName',\n                            width: 100,\n                            render: (text: any, record: IClickHouseTaskItem) => {\n                                return <span className=\"c-theme\">{record.userName || '-'}</span>\n                            },\n                            filters: [\n                                {\n                                    text: '全部',\n                                    value: 'all'\n                                },\n                                {\n                                    text: '非空',\n                                    value: 'string',\n                                }, {\n                                    text: '空',\n                                    value: 'object',\n                                }\n                            ],\n                            filterMultiple: false,\n                            onFilter: (value: string, record: IClickHouseTaskItem) => value === 'all' ? true : typeof record.userName === value\n                        },\n                        {\n                            title: '任务Id',\n                            dataIndex: 'taskId',\n                            key: 'taskId',\n                            width: 150,\n                            align: 'right',\n                            render: (text: any, record: IClickHouseTaskItem) => {\n                                return <div>\n                                    <span className=\"pr8 c-theme\">{record.taskId}</span>\n                                    <CopyToClipboard text={record.taskId} onCopy={() => {\n                                        message.success('已成功复制到粘贴板')\n                                    }}>\n                                        <CopyOutlined />\n                                    </CopyToClipboard>\n                                </div>\n                            },\n                            sorter: (rowA: IClickHouseTaskItem, rowB: IClickHouseTaskItem) => rowA.taskId.localeCompare(rowB.taskId)\n                        },\n                        {\n                            title: '看板ID',\n                            dataIndex: 'referredDashboardId',\n                            key: 'referredDashboardId',\n                            width: 80,\n                            align: 'right',\n                            render: (text: any, record: IClickHouseTaskItem) => {\n                                return record.referredDashboardId || '-'\n                            },\n                            filters: [\n                                {\n                                    text: '全部',\n                                    value: 'all'\n                                },\n                                {\n                                    text: '非空',\n                                    value: 'string',\n                                }, {\n                                    text: '空',\n                                    value: 'object',\n                                }\n                            ],\n                            filterMultiple: false,\n                            onFilter: (value: string, record: IClickHouseTaskItem) => value === 'all' ? true : typeof record.referredDashboardId === value\n                        },\n                        {\n                            title: '图表ID',\n                            dataIndex: 'referredChartId',\n                            key: 'referredChartId',\n                            width: 80,\n                            align: 'right',\n                            render: (text: any, record: IClickHouseTaskItem) => {\n                                return record.referredChartId || '-'\n                            },\n                            filters: [\n                                {\n                                    text: '全部',\n                                    value: 'all'\n                                },\n                                {\n                                    text: '非空',\n                                    value: 'string',\n                                }, {\n                                    text: '空',\n                                    value: 'object',\n                                }\n                            ],\n                            filterMultiple: false,\n                            onFilter: (value: string, record: IClickHouseTaskItem) => value === 'all' ? true : typeof record.referredChartId === value\n                        },\n                        {\n                            title: '图表名称',\n                            dataIndex: 'referredChartName',\n                            key: 'referredChartName',\n                            width: 80,\n                            render: (text: any, record: IClickHouseTaskItem) => {\n                                return record.referredChartName || '-'\n                            },\n                            sorter: (rowA: IClickHouseTaskItem, rowB: IClickHouseTaskItem) => {\n                                if (rowA.referredChartName && rowB.referredChartName) {\n                                    if (rowA.referredChartName === '-') return 1 //将为'-'的放在最后\n                                    return rowA.referredChartName.localeCompare(rowB.referredChartName)\n                                }\n                            }\n                        },\n                        {\n                            title: '任务时间',\n                            dataIndex: 'startTimestamp',\n                            key: 'startTimestamp',\n                            width: 150,\n                            sorter: (a: IClickHouseTaskItem, b: IClickHouseTaskItem) => new Date(a.startTimestamp).valueOf() - new Date(b.startTimestamp).valueOf(),\n                        },\n                        {\n                            title: 'SQL',\n                            dataIndex: 'sql',\n                            key: 'sql',\n                            width: 200,\n                            render: (text: any, record: IClickHouseTaskItem) => {\n                                return <div className=\"ellip1 link\" onClick={() => {\n                                    setCurrentDataItem(record)\n                                    setIsSqlVisable(true)\n                                }}>{record.sql}</div>\n                                // return <div className=\"taskstatus-edit-container\" onClick={() => {\n                                //     setCurrentDataItem(record)\n                                //     setIsSqlVisable(true)\n                                // }}><CodeEdit value={record.sql} readonly /></div>\n                            },\n                            sorter: (rowA: IClickHouseTaskItem, rowB: IClickHouseTaskItem) => {\n                                if (rowA.sql && rowB.sql) {\n                                    return rowA.sql.localeCompare(rowB.sql)\n                                }\n                            }\n                        },\n                        {\n                            title: '状态',\n                            dataIndex: 'taskStatus',\n                            key: 'taskStatus',\n                            width: 100,\n                            // fixed: 'right',\n                            render: (text: any, record: IClickHouseTaskItem) => {\n                                return <Tag color='blue'>{record.taskStatus}</Tag>\n                            },\n                            filters: [\n                                {\n                                    text: 'executing',\n                                    value: 'executing',\n                                }, {\n                                    text: 'succeed',\n                                    value: 'succeed',\n                                }, {\n                                    text: 'failed',\n                                    value: 'failed',\n                                }, {\n                                    text: 'pending',\n                                    value: 'pending',\n                                },\n\n                            ],\n                            onFilter: (value: string, record: IClickHouseTaskItem) => record.taskStatus.includes(value)\n                        },\n                        {\n                            title: '操作',\n                            width: 50,\n                            dataIndex: 'handle',\n                            key: 'handle',\n                            align: 'right',\n                            fixed: 'right',\n                            render: (text: any, record: IClickHouseTaskItem) => {\n                                return <span className=\"link\" onClick={() => {\n\n                                    Modal.confirm({\n                                        title: '终止',\n                                        icon: <ExclamationCircleOutlined />,\n                                        content: '确定终止该任务?',\n                                        okText: '确认终止',\n                                        cancelText: '取消',\n                                        okButtonProps: { danger: true },\n                                        onOk() {\n                                            return new Promise((resolve, reject) => {\n                                                actionStopClickhouseTask(record.taskId)\n                                                    .then((res) => {\n                                                        resolve('');\n                                                    })\n                                                    .catch((err) => {\n                                                        reject();\n                                                    });\n                                            })\n                                                .then((res) => {\n                                                    message.success('终止成功');\n                                                    fetchData()\n                                                })\n                                                .catch(() => {\n                                                    message.error('终止失败');\n                                                });\n                                        },\n                                        onCancel() { },\n                                    });\n                                }}>\n                                    终止\n                                </span>\n                            }\n                        }\n                    ]}\n                    loading={loading}\n                    pagination={false}\n                    dataSource={dataListRef.current}\n                    // onChange={(pageInfo: any) => {\n                    //     fetchData(pageInfo)\n                    // }}\n                    // rowSelection={{\n                    //     type: 'checkbox',\n                    //     onChange: (selectedRowKeys) => {\n                    //         setSelectedRowKeys(selectedRowKeys)\n                    //     }\n                    // }}\n                    scroll={{ x: 1500, y: scrollY }}\n                />\n            </Content>\n        </div >\n    );\n}\n\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.LayoutContext = exports.Header = exports.Footer = exports.Content = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar LayoutContext = /*#__PURE__*/React.createContext({\n  siderHook: {\n    addSider: function addSider() {\n      return null;\n    },\n    removeSider: function removeSider() {\n      return null;\n    }\n  }\n});\nexports.LayoutContext = LayoutContext;\n\nfunction generator(_ref) {\n  var suffixCls = _ref.suffixCls,\n      tagName = _ref.tagName,\n      displayName = _ref.displayName;\n  return function (BasicComponent) {\n    var Adapter = /*#__PURE__*/React.forwardRef(function (props, ref) {\n      var _React$useContext = React.useContext(_configProvider.ConfigContext),\n          getPrefixCls = _React$useContext.getPrefixCls;\n\n      var customizePrefixCls = props.prefixCls;\n      var prefixCls = getPrefixCls(suffixCls, customizePrefixCls);\n      return /*#__PURE__*/React.createElement(BasicComponent, (0, _extends2[\"default\"])({\n        ref: ref,\n        prefixCls: prefixCls,\n        tagName: tagName\n      }, props));\n    });\n    Adapter.displayName = displayName;\n    return Adapter;\n  };\n}\n\nvar Basic = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n      className = props.className,\n      children = props.children,\n      tagName = props.tagName,\n      others = __rest(props, [\"prefixCls\", \"className\", \"children\", \"tagName\"]);\n\n  var classString = (0, _classnames[\"default\"])(prefixCls, className);\n  return /*#__PURE__*/React.createElement(tagName, (0, _extends2[\"default\"])((0, _extends2[\"default\"])({\n    className: classString\n  }, others), {\n    ref: ref\n  }), children);\n});\nvar BasicLayout = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext2 = React.useContext(_configProvider.ConfigContext),\n      direction = _React$useContext2.direction;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n      siders = _React$useState2[0],\n      setSiders = _React$useState2[1];\n\n  var prefixCls = props.prefixCls,\n      className = props.className,\n      children = props.children,\n      hasSider = props.hasSider,\n      Tag = props.tagName,\n      others = __rest(props, [\"prefixCls\", \"className\", \"children\", \"hasSider\", \"tagName\"]);\n\n  var classString = (0, _classnames[\"default\"])(prefixCls, (_classNames = {}, (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-has-sider\"), typeof hasSider === 'boolean' ? hasSider : siders.length > 0), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  var contextValue = React.useMemo(function () {\n    return {\n      siderHook: {\n        addSider: function addSider(id) {\n          setSiders(function (prev) {\n            return [].concat((0, _toConsumableArray2[\"default\"])(prev), [id]);\n          });\n        },\n        removeSider: function removeSider(id) {\n          setSiders(function (prev) {\n            return prev.filter(function (currentId) {\n              return currentId !== id;\n            });\n          });\n        }\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(LayoutContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(Tag, (0, _extends2[\"default\"])({\n    ref: ref,\n    className: classString\n  }, others), children));\n});\nvar Layout = generator({\n  suffixCls: 'layout',\n  tagName: 'section',\n  displayName: 'Layout'\n})(BasicLayout);\nvar Header = generator({\n  suffixCls: 'layout-header',\n  tagName: 'header',\n  displayName: 'Header'\n})(Basic);\nexports.Header = Header;\nvar Footer = generator({\n  suffixCls: 'layout-footer',\n  tagName: 'footer',\n  displayName: 'Footer'\n})(Basic);\nexports.Footer = Footer;\nvar Content = generator({\n  suffixCls: 'layout-content',\n  tagName: 'main',\n  displayName: 'Content'\n})(Basic);\nexports.Content = Content;\nvar _default = Layout;\nexports[\"default\"] = _default;"],"names":["FEITIAN_URL","getDatabaseList","params","axios","baseURL","actionUpdateTTL","getStatusList","taskStatusKey","actionStopClickhouseTask","task_id","CodeEdit","props","useState","setInstance","editorDidMount","editor","value","options","placeholder","mode","theme","lineNumbers","smartIndent","lineWrapping","styleActiveLine","foldGutter","matchBrackets","autoCloseBrackets","gutters","extraKeys","Ctrl","hintOptions","completeSingle","alignWithWord","onCursorActivity","getSelection","onSelect","onBeforeChange","data","readonly","origin","execCommand","onChange","CopyToClipboard","require","customizeRenderEmpty","justify","align","style","height","flexDirection","src","emptyImg","width","alt","ResizableTitle","onResize","restProps","Resizable","handle","className","onClick","e","stopPropagation","draggableOpts","enableUserSelectHack","userSelect","exportDataVisible","setExportDataVisible","header","dataFormat","setDataFormat","filterValue","setFilterValue","columns","cols","setCols","handleResize","index","_","size","temp","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","map","col","onHeaderCell","column","scroll","useEffect","dataSource","filter","item","indexOf","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","title","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","length","join","rowKey","Object","values","handleExportText","direction","maskClosable","centered","bodyStyle","maxHeight","overflow","visible","onCancel","footer","position","label","defaultValue","right","bottom","type","tab","text","onCopy","message","cursor","minHeight","option","datas","sheetData","sheetName","ExportJsonExcel","saveExcel","titleNode","buttonNode","cancelExportData","marginLeft","renderEmpty","components","cell","pagination","loading","rowSelection","Title","Typography","styles","top","noBorderBottom","borderBottom","level","marginBottom","breadcrumbs","children","TaskStatusList","dataList","_setDataList","dataListRef","useRef","setDataList","current","isSqlVisable","setIsSqlVisable","setLoading","scrollY","setScrollY","timeCount","_setTimeCount","timeCountRef","setTimeCount","currentDataItem","setCurrentDataItem","_setTaskStatusKey","taskStatusKeyRef","getTableScroll","fetchData","timer","setInterval","clearInterval","key","then","taskInfoList","itemMap","Map","i","count","set","taskId","oldItem","get","tarList","sort","a","b","sql","replaceAll","duration","Date","valueOf","startTimestamp","finally","max","id","userName","referredChartId","referredDashboardId","destroyOnClose","record","fixed","sorter","render","currentSec","Math","floor","timeFormat","moment","toJSON","replace","dangerouslySetInnerHTML","__html","filters","filterMultiple","onFilter","rowA","rowB","localeCompare","referredChartName","color","taskStatus","includes","Modal","icon","content","okText","cancelText","okButtonProps","danger","onOk","Promise","resolve","reject","catch","err","y","_interopRequireDefault","_typeof","exports","_toConsumableArray2","_defineProperty2","_slicedToArray2","_extends2","React","obj","nodeInterop","__esModule","cache","_getRequireWildcardCache","has","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","prototype","hasOwnProperty","call","desc","_interopRequireWildcard","_classnames","_configProvider","WeakMap","cacheBabelInterop","cacheNodeInterop","__rest","s","t","p","getOwnPropertySymbols","propertyIsEnumerable","LayoutContext","createContext","siderHook","addSider","removeSider","generator","_ref","suffixCls","tagName","displayName","BasicComponent","Adapter","forwardRef","ref","getPrefixCls","useContext","ConfigContext","customizePrefixCls","prefixCls","createElement","Basic","others","classString","BasicLayout","_classNames","_React$useState","_React$useState2","siders","setSiders","hasSider","Tag","concat","contextValue","useMemo","prev","currentId","Provider","Layout","Content"],"sourceRoot":""}