{"version":3,"file":"static/js/821.a0a63869.chunk.js","mappings":"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","sources":["components/DataDiscoverySearch/DataDiscoverySearch.tsx","pages/DataDiscovery/DataDiscovery.tsx"],"sourcesContent":["import { LoadingOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Input, Menu } from 'antd';\nimport React, { useState, ChangeEvent, useEffect } from 'react';\nimport './DataDiscoverySearch.less';\n\ninterface IOptionsItem {\n    label: string\n    value: string\n    [key: string]: any\n}\n\nexport interface IOptionsGroupItem {\n    name: string\n    option: IOptionsItem[]\n}\n\ninterface IProps {\n    labelName?: string,\n    width?: string,\n    placeholder?: string,\n    maxLength?: number,\n    maxHeight?: number,\n    // 是否开启前端搜索匹配\n    isOpenSearchMatch?: boolean,\n    loading?: boolean | JSX.Element,\n    // 配置提示列表\n    options?: IOptionsGroupItem[],\n    // 当配置value时，即为可控组件\n    value?: string,\n    disabled?: boolean\n    // 按回车时回调\n    onSearch?: (value: string) => void,\n    // 输入字符、按下回车时回调\n    onChange?: (value: string) => void,\n    // 点击option中的item\n    onClick?: (value: string, option: IOptionsItem) => void,\n    // 滚动条到底时触发\n    onScrollButtom?: () => void\n}\n\nexport default function DataDiscoverySearch(props: IProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n    let inputRef: any;\n\n    const [dataCache, setDataCache] = useState<IOptionsGroupItem[]>(props.options || []);\n    const [value, setValue] = useState(props.value || '');\n\n    useEffect(() => {\n        let dataFilter = props.options || []\n\n        if (props.isOpenSearchMatch) {\n            setDataCache(dataFilter);\n        } else {\n            dataFilter = (props.options || [])\n                .map(group => ({ ...group, option: group.option.filter(item => item.value.indexOf(value) !== -1) }))\n            setDataCache(dataFilter);\n        }\n    }, [props.options]);\n\n    useEffect(() => {\n        let dataFilter = props.options || []\n\n        if (props.isOpenSearchMatch) {\n            setDataCache(dataFilter);\n        } else {\n            dataFilter = (props.options || [])\n                .map(group => ({ ...group, option: group.option.filter(item => item.value.indexOf(value) !== -1) }))\n            setDataCache(dataFilter);\n        }\n\n        setValue(props.value || '');\n        // props.onChange && props.onChange(props.value);\n    }, [props.value]);\n\n    const handleChange = (value: string): void => {\n        setValue(value);\n        props.onChange && props.onChange(value);\n    };\n\n    const handleClick = (value: string, option: IOptionsItem): void => {\n        handleChange(value);\n        inputRef.blur && inputRef.blur();\n        props.onClick && props.onClick(value, option);\n    };\n\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        // 回车\n        if (e.nativeEvent.keyCode === 13) {\n            // inputRef.blur && inputRef.blur();\n            props.onSearch && props.onSearch(e.currentTarget.value);\n        }\n    };\n\n    const highlightKeyWord = (item: string): JSX.Element => {\n        const keyWord = value;\n        const index = item.indexOf(value);\n        if (index === -1) {\n            return <span>{item}</span>;\n        }\n        const preStr = item.substring(0, index);\n        const nextStr = item.substring(index + value.length);\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\n    };\n\n    const debounce = (fun: any, time = 500): any => {\n        let timer: ReturnType<typeof setTimeout>;\n        return function (...args: any): void {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                fun && fun.apply(null, [...args]);\n            }, time);\n        };\n    };\n\n    const debounceScroll = debounce(props.onScrollButtom);\n\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\n        e.stopPropagation();\n        // console.log({\n        //     event: e,\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\n        //     currentTarget: e.currentTarget,\n        //     scrollTop: e.currentTarget.scrollTop,\n        //     scrollHeight: e.currentTarget.scrollHeight,\n        //     clientHeight: e.currentTarget.clientHeight\n        // });\n        const { currentTarget } = e;\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\n        const difference = scrollHeight - clientHeight - scrollTop;\n        if (difference < 20) {\n            props.onScrollButtom && debounceScroll();\n        }\n    };\n\n    return (\n        <div className=\"select-down-discovery\">\n            {\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\n            }\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\n                <Input\n                    style={{ width: '100%' }}\n                    disabled={props.disabled}\n                    id={id}\n                    placeholder={props.placeholder || ''}\n                    maxLength={props.maxLength || 200}\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\n                    onKeyPress={handleEnterKey}\n                    value={value}\n                    ref={element => inputRef = element}\n                />\n                {\n                    props.loading ? <LoadingOutlined className=\"p-a r0 mr8\" /> : <SearchOutlined onClick={() => {\n                        props.onSearch && props.onSearch(value);\n                    }} className=\"p-a r0 mr8 cp\" />\n                }\n            </div>\n\n            {\n                // 输入提示\n                dataCache.length ? <Menu className=\"select-option\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\n                    {\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\n                        </div> : null\n                    }\n                    {\n                        props.options?.map((group, groupIndex) => {\n                            if (group.option.length) {\n                                return <Menu.ItemGroup title={group.name} key={`dataDiscovery_${groupIndex}`}>\n                                    {\n                                        group.option.map((item, index) => {\n                                            return <Menu.Item className=\"ellip1\" onMouseDown={(): void => handleClick(item.value, item)} key={`dataDiscoveryItem_${group.name}_${index}`}>{highlightKeyWord(item.value)}</Menu.Item>;\n                                        })\n                                    }\n                                </Menu.ItemGroup>\n                            }\n                            return null\n                        })\n                    }\n                </Menu> : null\n            }\n        </div>\n    );\n}","import React, { useState } from 'react'\nimport DataDiscoverySearch from '../../components/DataDiscoverySearch/DataDiscoverySearch';\nimport './DataDiscovery.less';\n\nexport default function DataDiscovery() {\n    const [searchContent, setSearchContent] = useState<string>()\n\n    return (\n        // <div className=\"wrap\">\n        //     <div className=\"shadowTop\"></div>\n        //     <div className=\"shadowBottom\"></div>\n        // </div>\n        // <div className=\"g-container\">\n        //     <div className=\"g-triangle\"></div>\n        // </div>\n        <div className=\"d-f jc ac h100 w100\">\n            <DataDiscoverySearch\n                value={searchContent}\n                // isOpenSearchMatch\n                onChange={(value) => {\n                    setSearchContent(value)\n                }}\n                // options={['123', 'asdf']}\n                placeholder=\"输入关键字（表名）搜索\" />\n        </div>\n    )\n}\n"],"names":["DataDiscoverySearch","props","inputRef","id","Math","random","toString","substring","useState","options","dataCache","setDataCache","value","setValue","useEffect","dataFilter","isOpenSearchMatch","map","group","option","filter","item","indexOf","handleChange","onChange","highlightKeyWord","keyWord","index","preStr","nextStr","length","className","debounceScroll","fun","timer","time","args","clearTimeout","setTimeout","apply","debounce","onScrollButtom","labelName","htmlFor","style","width","disabled","placeholder","maxLength","e","target","onKeyPress","nativeEvent","keyCode","onSearch","currentTarget","ref","element","loading","LoadingOutlined","SearchOutlined","onClick","onScroll","stopPropagation","scrollTop","clientHeight","scrollHeight","maxHeight","right","top","groupIndex","title","name","onMouseDown","blur","handleClick","DataDiscovery","searchContent","setSearchContent"],"sourceRoot":""}