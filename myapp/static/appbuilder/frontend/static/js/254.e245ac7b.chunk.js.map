{"version":3,"file":"static/js/254.e245ac7b.chunk.js","mappings":"4cAIMA,EAAU,2BAEHC,EAAyB,SAACC,GACnC,OAAOC,EAAAA,EAAAA,IAAU,uCAAwC,CAAED,OAAAA,EAAQF,QAAAA,KAG1DI,EAAqB,SAACF,GAU/B,OAAOC,EAAAA,EAAAA,IAAU,mCAAoC,CAAED,OAAAA,EAAQF,QAAAA,KAEtDK,EAAwB,SAACH,GAUlC,OAAOC,EAAAA,EAAAA,IAAU,4CAA6C,CAAED,OAAAA,EAAQF,QAAAA,KAG/DM,EAAe,SAACJ,GACzB,OAAOC,EAAAA,EAAAA,IAAU,2CAA4C,CAAED,OAAAA,EAAQF,QAAAA,KAO9DO,EAAkB,SAACL,GAC5B,OAAOC,EAAAA,EAAAA,KAAW,sCAAuCD,EAAQ,CAAEF,QAAAA,KAG1DQ,EAAa,SAACN,GACvB,OAAOC,EAAAA,EAAAA,IAAU,sCAAuC,CAAED,OAAAA,EAAQF,QAAAA,KAGzDS,EAAe,SAACP,GACzB,OAAOC,EAAAA,EAAAA,IAAU,yCAA0C,CAAED,OAAAA,EAAQF,QAAAA,KAG5DU,EAAiB,SAACR,GAC3B,OAAOC,EAAAA,EAAAA,IAAU,2CAA4C,CAAED,OAAAA,EAAQF,QAAAA,KAG9DW,EAAmB,SAACT,GAC7B,OAAOC,EAAAA,EAAAA,IAAU,6CAA8C,CAAED,OAAAA,EAAQF,QAAAA,KAGhEY,EAAiB,SAACV,GAC3B,OAAOC,EAAAA,EAAAA,IAAU,yCAA0C,CAAED,OAAAA,EAAQF,QAAAA,KAG5Da,EAAwB,SAACX,GAClC,OAAOC,EAAAA,EAAAA,IAAU,yCAA0C,CAAED,OAAAA,EAAQF,QAAAA,KAG5Dc,EAAiB,SAACZ,GAC3B,OAAOC,EAAAA,EAAAA,IAAU,mCAAoC,CAAED,OAAAA,EAAQF,QAAAA,KAItDe,EAAiB,SAACb,GAW3B,OAAOC,EAAAA,EAAAA,IAAU,gCAAiC,CAAED,OAAAA,EAAQF,QAAAA,M,4HCnFjD,SAASgB,IACpB,OAAwBC,EAAAA,EAAAA,UAAiB,IAAzC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,GAAOC,EAAAA,EAAAA,IAAS,SAAW,GAC3BC,GAAOD,EAAAA,EAAAA,IAAS,SAAW,GAC3BE,GAAOF,EAAAA,EAAAA,IAAS,SAAW,IACjCR,EAAAA,EAAAA,IAAe,CACXO,KAAAA,EACAE,KAAAA,EACAC,KAAAA,IACDC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZP,EAAQO,EAAIR,WAEjB,KAEC,gBAAKW,UAAU,UAAUC,wBAAyB,CAAEC,OAAQb","sources":["api/swallowApi.ts","pages/ShowData.tsx"],"sourcesContent":["import axios, { AxiosResFormat, ResponseFormat } from '.'\nimport { IInstanceManagerItem, IInstanceManagerParams, ITaskManagerParams, ITaskManagerItem, ITaskDependencyItem, IActionRecordParam, IActionRedoParams, IActionKillParams, IInstanceLogParams, IActionFreezeParams, IHistoryItem, IPendingItem } from './interface/swallowInterface';\nimport Axios from 'axios';\n\nconst baseURL = 'http://swallow.tmeoa.com'\n\nexport const getInstanceManagerList = (params: IInstanceManagerParams): AxiosResFormat<IInstanceManagerItem[]> => {\n    return axios.get('/java/api/swallow/task/instances/get', { params, baseURL })\n}\n\nexport const getTaskManagerList = (params: ITaskManagerParams): AxiosResFormat<{\n    data: {\n        list: ITaskManagerItem[],\n        pageIndex: number,\n        pageSize: number,\n        sortItem: string,\n        sortType: string,\n        totalSize: number\n    }\n}> => {\n    return axios.get('/java/api/swallow/task/tasks/get', { params, baseURL })\n}\nexport const getTaskDependencyList = (params: { taskId: string | number }): AxiosResFormat<{\n    // list: ITaskDependencyItem[],\n    // pageIndex: number,\n    // pageSize: number,\n    // sortItem: string,\n    // sortType: string,\n    // totalSize: number\n    parent: ITaskDependencyItem[],\n    son: ITaskDependencyItem[]\n}> => {\n    return axios.get('/java/api/swallow/task/us/task/dependency', { params, baseURL })\n}\n\nexport const actionRecord = (params: IActionRecordParam): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/task/recording', { params, baseURL })\n}\n\nexport const actionRedo = (params: IActionRedoParams): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/task/redo', { params, baseURL })\n}\n\nexport const actionMultiRedo = (params: { list: IActionRedoParams[], userName: string }): AxiosResFormat<{}> => {\n    return axios.post('/java/api/swallow/task/us/task/redo', params, { baseURL })\n}\n\nexport const actionKill = (params: IActionKillParams): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/task/kill', { params, baseURL })\n}\n\nexport const actionFreeze = (params: IActionFreezeParams): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/tasks/freeze', { params, baseURL })\n}\n\nexport const actionUnFreeze = (params: { taskIds: string }): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/tasks/unfreeze', { params, baseURL })\n}\n\nexport const actionChangeDuty = (params: { inCharges: string[], modifier: string, usTaskId: string }): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/replace/incharge', { params, baseURL })\n}\n\nexport const getInstanceLog = (params: IInstanceLogParams): Promise<{ data: string }> => {\n    return axios.get('/java/api/swallow/task/us/instance/log', { params, baseURL })\n}\n\nexport const actionMultiTaskDelete = (params: { id: string }): AxiosResFormat<{}> => {\n    return axios.get('/java/api/swallow/task/us/tasks/delete', { params, baseURL })\n}\n\nexport const showCustomData = (params: { type: string, code: string, args: string }): Promise<{ data: string }> => {\n    return axios.get('/java/api/swallow/check/get/info', { params, baseURL })\n}\n\n//获取工单状态\nexport const getOrderStatus = (params: { instanceId: string | undefined }): Promise<{\n    data: {\n        data: {\n            instance_detail: {\n                history_data: IHistoryItem[],\n                pending_data: IPendingItem[],\n                process_key: string\n            }\n        }\n    }\n}> => {\n    return axios.get('/java/api/privacy/task/detail', { params, baseURL })\n}","import React, { useEffect, useState } from 'react'\nimport { showCustomData } from '../api/swallowApi'\nimport { getParam } from '../util'\n\nexport default function ShowData() {\n    const [data, setData] = useState<string>('')\n    useEffect(() => {\n        const type = getParam('type') || ''\n        const code = getParam('code') || ''\n        const args = getParam('args') || ''\n        showCustomData({\n            type,\n            code,\n            args\n        }).then(res => {\n            console.log(res);\n            setData(res.data)\n        })\n    }, [])\n    return (\n        <div className=\"fade-in\" dangerouslySetInnerHTML={{ __html: data }}>\n\n        </div>\n    )\n}\n"],"names":["baseURL","getInstanceManagerList","params","axios","getTaskManagerList","getTaskDependencyList","actionRecord","actionMultiRedo","actionKill","actionFreeze","actionUnFreeze","actionChangeDuty","getInstanceLog","actionMultiTaskDelete","showCustomData","getOrderStatus","ShowData","useState","data","setData","useEffect","type","getParam","code","args","then","res","console","log","className","dangerouslySetInnerHTML","__html"],"sourceRoot":""}