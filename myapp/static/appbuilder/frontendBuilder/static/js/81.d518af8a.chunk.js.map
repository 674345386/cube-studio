{"version":3,"file":"static/js/81.d518af8a.chunk.js","mappings":"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","sources":["components/ModalForm/ModalForm.tsx","components/TableBox/TableBox.tsx","components/TitleHeader/TitleHeader.tsx","components/MixSearch/MixSearch.tsx","pages/ADUGTemplate.tsx"],"sourcesContent":["import React, { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { Modal, Form, Spin, Input } from 'antd';\n\ninterface ModalFormProps {\n\tvisible: boolean;\n\tonCreate: (values: any) => void;\n\tonCancel: () => void;\n\tloading?: boolean;\n\tchildren?: any;\n\ttitle?: string;\n\tformData?: Record<string, any>;\n\twidth?: number;\n\tonValuesChange?: () => {}\n}\n\nconst ModalForm = (props: ModalFormProps): JSX.Element => {\n\tconst [form] = Form.useForm();\n\tconst [, updateState] = useState<any>();\n\tconst forceUpdate = React.useCallback(() => updateState({}), []);\n\n\tuseEffect(() => {\n\t\tif (props.formData) {\n\t\t\tform.setFieldsValue(props.formData);\n\t\t}\n\t}, [props]);\n\n\tconst [formChangeRes, setFormChangeRes] = useState<{\n\t\tcurrentChange: Record<string, any>\n\t\tallValues: Record<string, any>\n\t}>({\n\t\tcurrentChange: {},\n\t\tallValues: {}\n\t})\n\n\t// const propsChildrenMemo = useMemo(() => props.children(form), [])\n\n\treturn (\n\t\t<Modal\n\t\t\t// confirmLoading={props.loading}\n\t\t\tdestroyOnClose={true}\n\t\t\tmaskClosable={false}\n\t\t\twidth={props.width || 680}\n\t\t\tvisible={props.visible}\n\t\t\ttitle={props.title}\n\t\t\tokText=\"确定\"\n\t\t\tcancelText=\"取消\"\n\t\t\tonCancel={() => {\n\t\t\t\tform.resetFields();\n\t\t\t\tprops.onCancel();\n\t\t\t}}\n\t\t\tonOk={() => {\n\t\t\t\tconsole.log(form.getFieldsValue())\n\t\t\t\tform.validateFields()\n\t\t\t\t\t.then((values) => {\n\t\t\t\t\t\tprops.onCreate(values);\n\t\t\t\t\t\t// form.resetFields();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((info) => {\n\t\t\t\t\t\t// console.log('Validate Failed:', info);\n\t\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<Spin spinning={props.loading}>\n\t\t\t\t<Form onValuesChange={(value, allValues) => {\n\t\t\t\t\tsetFormChangeRes({\n\t\t\t\t\t\tcurrentChange: value,\n\t\t\t\t\t\tallValues\n\t\t\t\t\t})\n\t\t\t\t}} labelCol={{ span: 5 }} wrapperCol={{ span: 19 }} form={form} layout=\"horizontal\" name=\"form_in_modal\">\n\t\t\t\t\t{props.children && Object.prototype.toString.call(props.children) === '[object Function]'\n\t\t\t\t\t\t? props.children(form, formChangeRes)\n\t\t\t\t\t\t: props.children}\n\t\t\t\t</Form>\n\t\t\t</Spin>\n\t\t</Modal>\n\t);\n};\n\nexport default ModalForm;\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\nimport ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst customizeRenderEmpty = () => (\n\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t<div>暂无数据</div>\n\t</Row>\n);\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== '操作');\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\tconst handleClickOutputExcel = () => {\n\t\tconst option: any = {};\n\t\toption.fileName = 'result';\n\t\toption.datas = [\n\t\t\t{\n\t\t\t\tsheetData: dataFormat.data,\n\t\t\t\tsheetName: 'sheet',\n\t\t\t\tsheetHeader: dataFormat.header,\n\t\t\t},\n\t\t];\n\t\tconst toExcel = new ExportJsonExcel(option);\n\t\ttoExcel.saveExcel();\n\t};\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={'导出数据'}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">选择需要导出的列：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t全选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t反选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t导出数据\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import React, { ReactNode } from 'react';\nimport { Row, Typography, Col, Space } from 'antd';\nimport './TitleHeader.less';\n\nconst { Title } = Typography;\n\ninterface IProps {\n    title: ReactNode | string;\n    children?: ReactNode;\n    noBorderBottom?: boolean;\n    breadcrumbs?: ReactNode | string;\n}\n\nconst TitleHeader = (props: IProps) => {\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\n    return (\n        <Row\n            className=\"title-header\"\n            justify=\"space-between\"\n            align=\"middle\"\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\n            <div>\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\n                    {props.title}\n                </Title>\n                <div className=\"d-il\">\n                    {props.breadcrumbs}\n                </div>\n            </div>\n\n            <Col>\n                <Space>{props.children ? props.children : null}</Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default TitleHeader;\n","import React, { ReactNode, useState, useEffect, ReactText } from 'react';\nimport { Form, Row, Col, Input, Select, Button } from 'antd';\nimport { DeleteOutlined, PlusOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport './MixSearch.less';\nimport { LabeledValue } from 'antd/lib/select';\n\nconst { Option } = Select;\nexport interface IMixSearchParamItem {\n\tname: string\n\ttype: TMixSearchType\n\ttitle?: string\n\tdefalutValue?: any\n\tplaceHolder?: string\n\toption?: LabeledValue[]\n\tmultiple?: boolean\n\tindexKey?: number\n\tused?: boolean\n}\n\nexport type TMixSearchType = 'input' | 'select' | 'datePicker' | 'rangePicker'\n\ninterface IProps {\n\tparams?: IMixSearchParamItem[]\n\tvalues?: Array<{ key: ReactText | undefined, value: ReactText | undefined }>\n\tonChange: (values: Array<{ key: ReactText | undefined, value: ReactText | undefined }>) => void;\n}\n\nconst MixSearch = (props: IProps) => {\n\tconst [form] = Form.useForm();\n\tconst [collapsed, setCollapsed]: [boolean, any] = useState(false);\n\tconst [typeArr, setTypeArr]: [(string | undefined)[], any] = useState([]);\n\n\t// 序列化数据\n\tconst formatParamsData = (data?: IMixSearchParamItem[]) => {\n\t\treturn (data || []).map((item, indexKey) => ({ ...item, indexKey }))\n\t}\n\tconst [paramsData, setParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [currentParamsData, setCurrentParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [paramsDataMap, setParamsDataMap] = useState<Map<string, IMixSearchParamItem>>(new Map())\n\n\tuseEffect(() => {\n\t\tif (props.values) {\n\t\t\tconst group = props.values.length ? props.values : [{\n\t\t\t\tkey: undefined,\n\t\t\t\tvalue: undefined\n\t\t\t}]\n\t\t\tform.setFieldsValue({\n\t\t\t\tgroup\n\t\t\t})\n\n\t\t\tconst tarData = [...currentParamsData]\n\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\tfor (let j = 0; j < group.length; j++) {\n\t\t\t\t\tconst value = group[j];\n\t\t\t\t\tif (value !== undefined && group[j].key === tarData[i].name) {\n\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetCurrentParamsData(tarData)\n\t\t}\n\t}, [props.values])\n\n\tuseEffect(() => {\n\t\tif (props.params && props.params.length) {\n\t\t\tconst formatData = formatParamsData(props.params)\n\t\t\tsetParamsData(formatData)\n\t\t\tconst dataMap = paramsDataMap\n\t\t\tfor (let i = 0; i < formatData.length; i++) {\n\t\t\t\tconst param = formatData[i];\n\t\t\t\tdataMap.set(param.name, param)\n\t\t\t}\n\t\t\tsetParamsDataMap(dataMap)\n\t\t}\n\t}, [props.params])\n\n\t/**利用表单获取查询字段 */\n\tconst handleFinishForm = async (values: any): Promise<void> => {\n\t\tconsole.log(values);\n\t\tconst preVal = values['group'].filter(((item: any) => !!item.key))\n\t\tconst tarVal = preVal.map((item: any) => ({ key: item.key, value: item.value }))\n\t\tprops.onChange(tarVal);\n\t};\n\n\t/**展开收起 */\n\tconst handleCollapsed = (): void => {\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\t/**选择筛选类型 */\n\tconst handleSelectType = (name: string, index: number): void => {\n\t\tform.resetFields([['group', index, 'value']]);\n\t\tlet arr = [...typeArr];\n\t\tarr[index] = name;\n\t\tsetTypeArr(arr);\n\t};\n\n\t/**根据选择的类型，渲染input或select */\n\tconst handleRenderValueEl = (index: number): ReactNode => {\n\t\tlet key = form.getFieldValue(['group', index, 'key']);\n\t\tif (key) {\n\t\t\tconst currentItem = paramsDataMap.get(key)\n\t\t\tif (currentItem?.type === 'input') {\n\t\t\t\treturn <Input\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdefaultValue={currentItem.defalutValue}\n\t\t\t\t\tplaceholder={currentItem.placeHolder}\n\t\t\t\t\tonPressEnter={() => handlePressEnter()} />\n\t\t\t} else if (currentItem?.type === 'select') {\n\t\t\t\tconst currentOptions = currentItem?.option || []\n\t\t\t\treturn <Select\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdropdownMatchSelectWidth={500}\n\t\t\t\t\tshowSearch\n\t\t\t\t\tmode={key === 'label' ? 'multiple' : undefined}\n\t\t\t\t\toptionFilterProp=\"label\"\n\t\t\t\t\toptions={currentOptions.map(item => ({ label: item.label, value: item.value }))}\n\t\t\t\t// onDropdownVisibleChange={(open) => handleDropdown(open, key)}\n\t\t\t\t/>\n\t\t\t}\n\t\t} else {\n\t\t\treturn <Input style={{ width: '65%' }} onPressEnter={() => handlePressEnter()} />;\n\t\t}\n\t};\n\n\t/**下拉获取对应的数据，并判断是否存在下拉数据，没有则请求，有则不请求 */\n\t// const handleDropdown = async (open: boolean, key: string): Promise<void> => {\n\t// \tif (open) {\n\t// \t\tif (selectionData[key]) {\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t\ttry {\n\t// \t\t\tlet res = await getSelections(key);\n\t// \t\t\tlet data = { ...selectionData };\n\t// \t\t\tdata[key] = res.data.data;\n\t// \t\t\tsetSelectionData(data);\n\t// \t\t} catch (error) { }\n\t// \t}\n\t// };\n\n\t/**输入框回车操作 */\n\tconst handlePressEnter = (): void => {\n\t\tform.validateFields();\n\t};\n\n\treturn (\n\t\t<Form\n\t\t\t// {...formConfig}\n\t\t\tclassName=\"cmdb-mixsearch bg-title\"\n\t\t\tform={form}\n\t\t\tonFinish={handleFinishForm}\n\t\t\tinitialValues={{\n\t\t\t\tgroup: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: undefined,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t>\n\t\t\t<Row className=\"cmdb-mixsearch-content\" gutter={16} style={{ marginLeft: 0, marginRight: 0, ...collapsed ? { height: 70 } : { height: 'auto' } }}>\n\t\t\t\t<Form.List name={`group`}>\n\t\t\t\t\t{(fields, { add, remove }) => {\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfields.map((field, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`mixSearch_${field.key}_${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Row align=\"middle\" gutter={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Col className=\"cmdb-mixsearch-name\">名称</Col> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input.Group compact>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'key']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请选择key' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// initialValue={'testParams'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '35%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"请选择\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handleSelectType(value, index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectActionRemove = (value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).filter((item: any) => !!item).map((item: any) => item.key)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (!usedKey.includes(item.name)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectActionRemove(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentParamsData.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option style={{ display: item.used ? 'none' : 'inherit' }} key={`mixSearch_${item.name}_${index}`} value={item.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.title || item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldUpdate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'value']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请填写value' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{handleRenderValueEl(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Input.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-delete\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).map((item: any) => item ? item.key : undefined)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove(index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {index === fields.length - 1 && index < (paramsData.length - 1) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{paramsData.length !== fields.length && (\n\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add d-il\" onClick={() => {\n\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t}}\n\t\t\t\t</Form.List>\n\n\t\t\t\t<Col flex={1}>\n\t\t\t\t\t<Row justify=\"end\">\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\t查询\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"cmdb-mixsearch-collapsed\">\n\t\t\t\t<Row onClick={() => handleCollapsed()} justify=\"center\" align=\"middle\">\n\t\t\t\t\t{collapsed ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Col>展开</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<DownOutlined />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col>收起</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<UpOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n};\n\nexport default MixSearch;\n","import React, { ReactText, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Spin, Form, Tag, Popover, Tooltip, Select, FormInstance, Upload, UploadProps, Drawer, notification } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport TitleHeader from '../components/TitleHeader/TitleHeader';\nimport TableBox from '../components/TableBox/TableBox';\nimport moment from \"moment\";\nimport { CopyOutlined, DownOutlined, ExclamationCircleOutlined, PlusOutlined, QuestionCircleOutlined, RollbackOutlined, UploadOutlined } from '@ant-design/icons'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getParam, getTableScroll } from '../util';\nimport ModalForm from '../components/ModalForm/ModalForm';\nimport cookies from 'js-cookie';\nimport { IADUGTemplateActionItem, IAppMenuItem } from '../api/interface/kubeflowInterface';\nimport { getADUGTemplateList, getADUGTemplateApiInfo, actionADUGTemplateDelete, getADUGTemplateDetail, actionADUGTemplateAdd, actionADUGTemplateUpdate, actionADUGTemplateSingle, actionADUGTemplateMuliple, getCustomDialog } from '../api/kubeflowApi';\nimport { ColumnsType } from 'antd/lib/table';\nimport MixSearch, { IMixSearchParamItem } from '../components/MixSearch/MixSearch';\nimport DynamicForm, { calculateId, IDynamicFormConfigItem, IDynamicFormGroupConfigItem, ILinkageConfig, TDynamicFormType } from '../components/DynamicForm/DynamicForm';\nimport { columnConfig } from './columnConfig';\n\ninterface fatchDataParams {\n    pageConf: TablePaginationConfig\n    params: any[]\n    paramsMap: Record<string, any>\n    sorter?: ISorterParam\n}\n\ninterface ISorterParam {\n    order_column: string\n    order_direction: 'desc' | 'asc'\n}\n\nexport default function TaskListManager(props?: IAppMenuItem) {\n    const PAGE_SIZE = 10;\n    const navigate = useNavigate();\n    const location = useLocation()\n    const [dataList, setDataList] = useState<any[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [loadingAdd, setLoadingAdd] = useState(false)\n    const [visableAdd, setVisableAdd] = useState(false)\n    const [loadingUpdate, setLoadingUpdate] = useState(false)\n    const [visableUpdate, setVisableUpdate] = useState(false)\n    const [loadingDetail, setLoadingDetail] = useState(false)\n    const [visableDetail, setVisableDetail] = useState(false)\n    const [customDialogVisable, setCustomDialogVisable] = useState(false)\n    const [customDialogTitle, setCustomDialogTitle] = useState<string>()\n    const [customDialogContent, setCustomDialogContent] = useState<string>()\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\n    const [dateInfo, setDateInfo] = useState<{\n        startTime: string,\n        endTime: string\n    }>({\n        startTime: moment().subtract(1, 'd').startOf('day').format('YYYY-MM-DD HH:mm:ss'),\n        endTime: moment().subtract(1, 'd').endOf('day').format('YYYY-MM-DD HH:mm:ss')\n    })\n    const pageInfoInit: TablePaginationConfig = {\n        current: 1,\n        pageSize: PAGE_SIZE,\n        total: 0,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSizeOptions: [10, 20, 50, 100, 500],\n        showTotal: (total) => `共${total}条`,\n    };\n    const [pageInfo, setPageInfo] = useState<TablePaginationConfig>(pageInfoInit);\n    const [currentColumns, setCurrentColumns] = useState<ColumnsType<any>>([])\n    // const customFilter: IMixSearchParamItem[] = [\n    //     { name: 'test1', type: 'input' },\n    //     { name: 'test2', type: 'select', option: [{ label: 'title1', value: 'value1' }, { label: 'title2', value: 'value2' }] },\n    //     { name: 'test3', type: 'input' },\n    //     { name: 'test4', type: 'select' },\n    // ]\n    const [filterParams, setFilterParams] = useState<IMixSearchParamItem[]>([])\n    const [filterValues, _setFilterValues] = useState<Array<{ key: ReactText | undefined, value: ReactText | undefined }>>([])\n    const filterValuesRef = useRef(filterValues);\n    const setFilterValues = (data: Array<{ key: ReactText | undefined, value: ReactText | undefined }>): void => {\n        filterValuesRef.current = data;\n        _setFilterValues(data);\n    };\n    const [dynamicFormConfigAdd, setDynamicFormConfigAdd] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormConfigUpdate, setDynamicFormConfigUpdate] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormGroupConfigAdd, setDynamicFormGroupConfigAdd] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [dynamicFormGroupConfigUpdate, setDynamicFormGroupConfigUpdate] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [updateColumnsMap, setUpdateColumnsMap] = useState<Record<string, any>>({})\n    const [labelMap, _setLabelMap] = useState<Record<string, string>>({})\n    const labelMapRef = useRef(labelMap);\n    const setLabelMap = (data: Record<string, string>): void => {\n        labelMapRef.current = data;\n        _setLabelMap(data);\n    };\n    const [dataDetail, setDataDetail] = useState<Array<{ label: string, value: any, key: string }>>([])\n    const [tableWidth, setTableWidth] = useState(1000)\n    const [permissions, setPermissions] = useState<string[]>([])\n    // const [tips, setTips] = useState<Array<{ label: string, value: any }>>([])\n    const [filterParamsMap, setFilterParamsMap] = useState<Record<string, any>>({})\n    const [helpUrl, setHelpUrl] = useState<string | null>()\n\n    const [baseUrl, _setBaseUrl] = useState<string>()\n    const baseUrlRef = useRef(baseUrl);\n    const setBaseUrl = (data: string): void => {\n        baseUrlRef.current = data;\n        _setBaseUrl(data);\n    };\n    const [isImportData, setIsImportData] = useState(false)\n    const [columnRelateFormat, setColumnRelateFormat] = useState<ILinkageConfig[]>([])\n    const [multipleAction, setMultipleAction] = useState<IADUGTemplateActionItem[]>([])\n    const [sorterParam, setSorterParam] = useState<{\n        order_column: string\n        order_direction: 'desc' | 'asc'\n    }>()\n    const [primaryKey, setPrimaryKey] = useState('')\n    const [labelTitle, setLabelTitle] = useState('')\n\n    const [scrollY, setScrollY] = useState(\"\")\n\n    const fetchDataParams = {\n        pageConf: pageInfoInit,\n        params: [],\n        paramsMap: filterParamsMap,\n        sorter: undefined\n    }\n\n    useEffect(() => {\n        setScrollY(getTableScroll())\n    }, [])\n\n    useEffect(() => {\n        const url = encodeURIComponent(location.pathname)\n        getCustomDialog(url).then(res => {\n            const { title, content, hit } = res.data\n            setCustomDialogTitle(title)\n            setCustomDialogContent(content)\n            setCustomDialogVisable(hit)\n        }).catch(err => {\n            console.log(err);\n        })\n    }, [])\n\n    useEffect(() => {\n        const targetId = getParam('targetId')\n        const url = targetId ? `/dimension_remote_table_modelview/${targetId}/api/` : props?.url\n\n        getADUGTemplateApiInfo(url).then(res => {\n            const {\n                list_columns,\n                label_columns,\n                filters,\n                add_columns,\n                edit_columns,\n                permissions,\n                description_columns,\n                add_fieldsets,\n                edit_fieldsets,\n                help_url,\n                order_columns,\n                action,\n                route_base,\n                column_related,\n                primary_key,\n                label_title,\n                cols_width,\n                import_data\n            } = res.data\n            const actionwidth = 80 || [props?.related, permissions.includes('can_show'), permissions.includes('can_edit'), permissions.includes('can_delete')].filter(item => !!item).length * 60\n            const hasAction = props?.related || permissions.includes('can_show') || permissions.includes('can_edit') || permissions.includes('can_delete')\n            const cacheColumns = localStorage.getItem(`tablebox_${location.pathname}`)\n            const cacheColumnsWidthMap = (JSON.parse(cacheColumns || '[]')).reduce((pre: any, next: any) => ({ ...pre, [next.dataIndex]: next.width }), {});\n\n            const columnRelatedFormat: ILinkageConfig[] = Object.entries(column_related || {})\n                .reduce((pre: any[], [key, value]) => ([...pre, {\n                    dep: value.src_columns,\n                    effect: value.des_columns.join(''),\n                    effectOption: value.related.reduce((ePre: any, eNext) => ({ ...ePre, [calculateId(eNext.src_value)]: eNext.des_value.map(item => ({ label: item, value: item })) }), {})\n                }]), [])\n\n            // 表格字段处理\n            const listColumns = list_columns.map(column => {\n                return {\n                    title: label_columns[column] || column,\n                    dataIndex: column,\n                    key: column,\n                    sorter: order_columns.includes(column) ? (a: any, b: any) => a[column] - b[column] : undefined,\n                    render: (text: any, record: any) => {\n                        if (text === undefined || text === '') {\n                            return '-'\n                        }\n                        if (cols_width[column] && cols_width[column].type?.indexOf('ellip') !== -1) {\n                            return <Tooltip title={<span className=\"tips-content\" dangerouslySetInnerHTML={{ __html: text }}></span>} placement=\"topLeft\">\n                                <div className={cols_width[column].type} dangerouslySetInnerHTML={{ __html: text }}>\n                                </div>\n                            </Tooltip>\n                        }\n                        if (Object.prototype.toString.call(text) === '[object Object]') {\n                            const tarRes = Object.entries(text).reduce((pre: any, [label, value]) => [...pre, { label, value }], [])\n                            if (!tarRes.length) {\n                                return '-'\n                            }\n                            return <div style={{ overflow: 'auto', maxHeight: 100 }}>\n                                {\n                                    tarRes.map((item: any, index: number) => {\n                                        return <div key={`table_itemvalue_${index}`}>{label_columns[item.label] || item.label}:{item.value}</div>\n                                    })\n                                }\n                            </div>\n                        }\n                        return <div style={{ overflow: 'auto', maxHeight: 100 }} dangerouslySetInnerHTML={{ __html: text }}></div>\n                    },\n                    width: cacheColumnsWidthMap[column] || (cols_width[column] && cols_width[column].width) || 100\n                }\n            })\n\n            const actionList = Object.entries(action || {}).reduce((pre: any, [name, value]) => ([...pre, { ...value }]), [])\n            const multipleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.multiple)\n            const singleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.single)\n\n            // 表单字段处理\n            const createDyFormConfig = (data: Record<string, any>[]): IDynamicFormConfigItem[] => {\n                return data.map((item, index) => {\n                    let type = item['ui-type'] || 'input'\n                    if (type === 'select2') {\n                        type = 'select'\n                    }\n                    const label = item.label || label_columns[item.name]\n\n                    // 校验规则\n                    const rules = (item.validators || []).map((item: any) => {\n                        switch (item.type) {\n                            case 'DataRequired':\n                                return { required: true, message: `请输入${label}` }\n                            case 'Regexp':\n                                return { pattern: new RegExp(`${item.regex}`), message: `请按正确的规则输入` }\n                            case 'Length':\n                                return { min: item.min, max: item.max, message: `请输入正确的长度` }\n                            default:\n                                return undefined\n                        }\n                    }).filter((item: any) => !!item)\n\n                    const list = createDyFormConfig((item.info || []))\n\n                    const res: IDynamicFormConfigItem = {\n                        label,\n                        type,\n                        rules,\n                        list,\n                        name: item.name,\n                        disable: item.disable,\n                        description: item.description || description_columns[item.name] || undefined,\n                        required: item.required,\n                        defaultValue: item.default === '' ? undefined : item.default,\n                        multiple: item['ui-type'] && item['ui-type'] === 'select2',\n                        options: (item.values || []).map((item: any) => ({ label: item.value, value: item.id })),\n                    }\n                    return res\n                })\n            }\n\n            const tableAction: any = {\n                title: '操作',\n                width: actionwidth,\n                dataIndex: 'handle',\n                key: 'handle',\n                align: 'right',\n                fixed: 'right',\n                render: (text: any, record: any) => {\n                    return (\n                        <Space size=\"middle\">\n                            {\n                                hasAction ? <Dropdown overlay={<Menu>\n                                    {\n                                        permissions.includes('can_show') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableDetail(true)\n                                            fetchDataDetail(record[primary_key])\n                                        }}>\n                                            详情\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_edit') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableUpdate(true)\n                                            getADUGTemplateApiInfo(route_base, record[primary_key]).then(res => {\n                                                const { edit_columns } = res.data\n                                                const formConfigUpdate: IDynamicFormConfigItem[] = createDyFormConfig(edit_columns)\n                                                const formGroupConfigUpdate: IDynamicFormGroupConfigItem[] = edit_fieldsets.map(group => {\n                                                    const currentData = group.fields.map(field => updateColumnsMap[field]).filter(item => !!item)\n                                                    return {\n                                                        group: group.group,\n                                                        expanded: group.expanded,\n                                                        config: createDyFormConfig(currentData)\n                                                    }\n                                                })\n\n                                                console.log(formConfigUpdate);\n                                                setDynamicFormConfigUpdate(formConfigUpdate)\n                                                setDynamicFormGroupConfigUpdate(formGroupConfigUpdate)\n\n                                                fetchDataDetail(record[primary_key])\n                                            }).catch(() => {\n                                                message.warn('用户没有修改权限')\n                                            })\n                                        }}>\n                                            修改\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_delete') ? <Menu.Item><div className=\"c-fail cp\" onClick={() => {\n                                            Modal.confirm({\n                                                title: '删除',\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: '确定删除?',\n                                                okText: '确认删除',\n                                                cancelText: '取消',\n                                                okButtonProps: { danger: true },\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateDelete(`${route_base}${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success('删除成功');\n                                                            console.log(filterValuesRef.current);\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error('删除失败');\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>\n                                            删除\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        props?.related?.map((item, index) => {\n                                            return <Menu.Item key={`moreAction_${index}`}>\n                                                <div className=\"link\" onClick={() => {\n                                                    navigate(`${location.pathname}/${item.name}?id=${record[primary_key]}`)\n                                                }}>\n                                                    {item.title}\n                                                </div>\n                                            </Menu.Item>\n                                        })\n                                    }\n                                    {\n                                        !!singleAction.length && singleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_action_${index}`}><div className=\"link\" onClick={() => {\n                                                Modal.confirm({\n                                                    title: action.confirmation,\n                                                    icon: <ExclamationCircleOutlined />,\n                                                    content: '',\n                                                    okText: `确认${action.confirmation}`,\n                                                    cancelText: '取消',\n                                                    onOk() {\n                                                        return new Promise((resolve, reject) => {\n                                                            actionADUGTemplateSingle(`${route_base}action/${action.name}/${record[primary_key]}`)\n                                                                .then((res) => {\n                                                                    resolve('');\n                                                                })\n                                                                .catch((err) => {\n                                                                    reject();\n                                                                });\n                                                        })\n                                                            .then((res) => {\n                                                                message.success('操作成功');\n                                                                fetchData({\n                                                                    ...fetchDataParams,\n                                                                    pageConf: pageInfo,\n                                                                    params: filterValuesRef.current,\n                                                                    paramsMap: filters\n                                                                });\n                                                            })\n                                                            .catch(() => {\n                                                                message.error('操作失败');\n                                                            });\n                                                    },\n                                                    onCancel() { },\n                                                });\n                                            }}>\n                                                {action.text}\n                                            </div></Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                    <div className=\"link\">更多<DownOutlined /></div>\n                                </Dropdown> : null\n                            }\n                        </Space>\n                    );\n                },\n            }\n            const tarColumns: React.SetStateAction<ColumnsType<any>> = [...listColumns]\n            if (hasAction) {\n                tarColumns.push(tableAction)\n            }\n\n            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            const updateColumnsMap = edit_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns)\n            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                return {\n                    group: group.group,\n                    expanded: group.expanded,\n                    config: createDyFormConfig(currentData)\n                }\n            })\n\n            const tarFilter: IMixSearchParamItem[] = Object.entries(filters)\n                .reduce((pre: any, [name, value]) => {\n                    return [...pre, {\n                        name,\n                        type: value['ui-type'] || 'input',\n                        title: label_columns[name],\n                        oprList: value.filter.map(item => item.operator),\n                        defalutValue: value.default === '' ? undefined : value.default,\n                        option: value.values ? value.values.map(item => ({ label: item.value, value: item.id })) : undefined\n                    }]\n                }, [])\n\n            let currentFilterValues = Object.entries(filters)\n                .reduce((pre: any, [key, value]) => {\n                    return [...pre, {\n                        key,\n                        value: value.default\n                    }]\n                }, []).filter((item: any) => item.value)\n\n            const localCacheFilter = JSON.parse(localStorage.getItem(`filter_${location.pathname}${location.search}`) || '[]')\n            let urlFilter = undefined\n            if (getParam('filter')) {\n                try {\n                    urlFilter = JSON.parse(getParam('filter') || '[]')\n                } catch (error) {\n                    message.error('filter解析异常')\n                }\n            }\n            const localFilter = urlFilter || localCacheFilter\n            if (localFilter && localFilter.length) {\n                currentFilterValues = localFilter\n            }\n\n            setIsImportData(import_data)\n            setLabelTitle(label_title)\n            setPrimaryKey(primary_key)\n            setColumnRelateFormat(columnRelatedFormat)\n            setMultipleAction(multipleAction)\n            setBaseUrl(route_base)\n            setUpdateColumnsMap(updateColumnsMap)\n            setFilterParamsMap(filters)\n            setCurrentColumns(tarColumns)\n            setFilterParams(tarFilter)\n            setDynamicFormConfigAdd(formConfigAdd)\n            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n            setLabelMap(label_columns)\n            setPermissions(permissions)\n            const currentTableWidth = cacheColumns ? tarColumns.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 80 : tarColumns.length * 100 + 80 + actionwidth\n            setTableWidth(currentTableWidth)\n            setHelpUrl(help_url)\n            setFilterValues(currentFilterValues)\n            fetchData({\n                pageConf: pageInfoInit,\n                params: currentFilterValues,\n                paramsMap: filters,\n                sorter: undefined\n            });\n        })\n\n    }, []);\n\n    const fetchData = ({\n        pageConf,\n        params,\n        paramsMap,\n        sorter\n    }: fatchDataParams = {\n            pageConf: pageInfoInit,\n            params: filterValues,\n            paramsMap: filterParamsMap,\n            sorter: undefined\n        }) => {\n        setLoading(true);\n        let form_data = undefined\n        const temlateId = getParam('id')\n\n        form_data = JSON.stringify({\n            str_related: 1,\n            \"filters\": [\n                temlateId ? {\n                    \"col\": props?.model_name,\n                    \"opr\": \"rel_o_m\",\n                    \"value\": +temlateId\n                } : undefined,\n                ...params.filter(param => param.value !== undefined).map((param: any) => {\n                    console.log(paramsMap[param.key]);\n                    let opr = ''\n                    if (!isNaN(+param.value) && paramsMap[param.key] && !(paramsMap[param.key].type === 'Related' || paramsMap[param.key].type === 'QuerySelect')) {\n                        opr = 'eq'\n                    } else {\n                        const oprList = ['ct', 'lt', 'eq', 'rel_o_m']\n                        const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                        for (let i = 0; i < oprList.length; i++) {\n                            const currentOpr = oprList[i];\n                            if (sourceOprList.includes(currentOpr)) {\n                                opr = currentOpr\n                                break\n                            }\n                        }\n                    }\n\n                    return {\n                        \"col\": param.key,\n                        \"opr\": opr,\n                        \"value\": param.value\n                    }\n                })\n            ].filter(item => !!item),\n            page: (pageConf.current || 1) - 1,\n            page_size: pageConf.pageSize || 10,\n            ...sorter\n        })\n\n        getADUGTemplateList(baseUrlRef.current, {\n            form_data,\n        })\n            .then((res) => {\n                const { count, data } = res.data.result\n                setDataList(data);\n                setSelectedRowKeys([])\n                setPageInfo({ ...pageInfoInit, ...pageConf, total: count });\n                setSorterParam(sorter)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const fetchDataDetail = (id: string) => {\n        setLoadingDetail(true)\n        setDataDetail([])\n        getADUGTemplateDetail(`${baseUrlRef.current}${id}`)\n            .then(res => {\n                const data = res.data.result\n                const detail: any[] = []\n                const formatValue = (data: any) => {\n                    if (Object.prototype.toString.call(data) === '[object Object]') {\n                        return data.last_name\n                    }\n                    return data\n                }\n                Object.keys(data).forEach(key => {\n                    detail.push({\n                        label: labelMapRef.current[key] || key,\n                        value: formatValue(data[key]),\n                        key\n                    })\n                })\n                setDataDetail(detail)\n            })\n            .catch(err => { })\n            .finally(() => { setLoadingDetail(false) })\n    }\n\n    const handleMultiRecord = (action: IADUGTemplateActionItem) => {\n        if (selectedRowKeys.length) {\n            // console.log(selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey]));\n            Modal.confirm({\n                title: action.confirmation,\n                icon: <ExclamationCircleOutlined />,\n                content: '',\n                okText: `确认${action.confirmation}`,\n                cancelText: '取消',\n                onOk() {\n                    return new Promise((resolve, reject) => {\n                        actionADUGTemplateMuliple(`${baseUrlRef.current}multi_action/${action.name}`, {\n                            ids: selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey])\n                        })\n                            .then((res) => {\n                                resolve('');\n                            })\n                            .catch((err) => {\n                                reject();\n                            });\n                    })\n                        .then((res) => {\n                            message.success('操作成功');\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(() => {\n                            message.error('操作失败');\n                        });\n                },\n                onCancel() { },\n            });\n        } else {\n            message.warn('请先选择')\n        }\n    }\n\n    const uploadConfig: UploadProps = {\n        name: 'csv_file',\n        maxCount: 1,\n        action: `${baseUrl}upload/`,\n        headers: {\n            authorization: 'authorization-text',\n        },\n        beforeUpload: file => {\n            const isCSV = file.name.indexOf('.csv') !== -1;\n            if (!isCSV) {\n                message.error(`${file.name} 并不是csv文件`);\n            }\n            return isCSV || Upload.LIST_IGNORE;\n        },\n        onChange(info) {\n            // if (info.file.status !== 'uploading') {\n            //     console.log(info.file, info.fileList);\n            // }\n            if (info.file.status === 'done') {\n                // message.success(`${info.file.name}，${info.file.response.message}`);\n                notification['success']({\n                    message: '导入成功',\n                    description: JSON.stringify(info.file.response),\n                });\n            } else if (info.file.status === 'error') {\n                // message.error(`${info.file.name} 数据导入失败`);\n                notification['error']({\n                    message: '导入失败',\n                    description: JSON.stringify(info.file.response),\n                });\n            }\n        },\n    };\n\n    return (\n        <div className=\"fade-in\">\n            {/* 自定义弹窗 */}\n            <Drawer contentWrapperStyle={{ width: 'auto' }} title={customDialogTitle} placement=\"right\" onClose={() => { setCustomDialogVisable(false) }} visible={customDialogVisable}>\n                <div dangerouslySetInnerHTML={{ __html: customDialogContent || '' }}></div>\n            </Drawer>\n            {/* 添加 */}\n            <ModalForm\n                title={`添加${labelTitle}`}\n                width={800}\n                loading={loadingAdd}\n                visible={visableAdd}\n                onCancel={() => { setVisableAdd(false) }}\n                onCreate={(values) => {\n                    setLoadingAdd(true)\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateAdd(baseUrlRef.current, values).then((res: any) => {\n                        message.success(`添加${labelTitle}成功`)\n                        setVisableAdd(false)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfo,\n                            params: filterValues,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }).catch(err => {\n                        message.error(`添加${labelTitle}失败`)\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }}\n            >\n                {\n                    (form: FormInstance, formChangeRes: any) => <DynamicForm form={form} formChangeRes={formChangeRes} linkageConfig={columnRelateFormat} config={dynamicFormConfigAdd} configGroup={dynamicFormGroupConfigAdd} />\n                }\n            </ModalForm>\n            {/* 修改 */}\n            <ModalForm\n                title={`修改${labelTitle}`}\n                width={800}\n                formData={dataDetail.reduce((pre, next) => {\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select') {\n                        let value = next.value\n                        const options = (updateColumnsMap[next.key] || {}).values || []\n                        const tarIndex = options.map((item: any) => item.value).indexOf(next.value)\n                        if (~tarIndex) {\n                            value = options[tarIndex].id\n                        }\n                        return { ...pre, [next.key]: value }\n                    }\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select2') {\n                        return { ...pre, [next.key]: (next.value || '').split(',') }\n                    }\n                    return { ...pre, [next.key]: next.value }\n                }, {})}\n                loading={loadingUpdate || loadingDetail}\n                visible={visableUpdate}\n                onCancel={() => { setVisableUpdate(false) }}\n                onCreate={(values) => {\n                    setLoadingUpdate(true)\n                    setDataDetail([])\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateUpdate(`${baseUrlRef.current}${values[primaryKey]}`, values)\n                        .then(res => {\n                            message.success(`更新${labelTitle}成功`)\n                            setVisableUpdate(false)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(err => {\n                            message.error(`更新${labelTitle}失败`)\n                        })\n                        .finally(() => { setLoadingUpdate(false) })\n                }}\n            >\n                {\n                    (form: FormInstance) => <DynamicForm form={form} primaryKey={primaryKey} config={dynamicFormConfigUpdate} linkageConfig={columnRelateFormat} configGroup={dynamicFormGroupConfigUpdate} />\n                }\n            </ModalForm>\n            {/* 详情 */}\n            <Modal\n                title={`${labelTitle}详情`}\n                visible={visableDetail}\n                footer={null}\n                width={800}\n                destroyOnClose\n                onCancel={() => { setVisableDetail(false) }}>\n                <Spin spinning={loadingDetail}>\n                    <div className=\"pb32\" style={{ minHeight: 300 }}>\n                        {\n                            dataDetail.map((item, index) => {\n                                return <Row className=\"mb16\" key={`dataDetail_${index}`}>\n                                    <Col span={6}><div className=\"ta-r\"><strong>{item.label}：</strong></div></Col>\n                                    <Col span={18}><span dangerouslySetInnerHTML={{ __html: item.value }}></span></Col>\n                                </Row>\n                            })\n                        }\n                    </div>\n                </Spin>\n            </Modal>\n            <TitleHeader title={<>\n                {\n                    (props?.isSubRoute || getParam('targetId')) ? <Button className=\"mr16\" onClick={() => {\n                        navigate('/data/metadata/metadata_dimension')\n                        window.location.reload()\n                    }}><RollbackOutlined />返回</Button> : null\n                }\n                <span>{labelTitle}</span>\n            </>} breadcrumbs={(props?.breadcrumbs || []).map((crumbs, idx) => {\n                return <span key={`templateTitle_${props?.name}_${idx}`} className=\"c-hint-b fs12\">/<span className=\"plr2\">{crumbs}</span></span>\n            })} >\n                {\n                    helpUrl ? <div className=\"link\"><span className=\"pr4\" onClick={() => {\n                        window.open(helpUrl, 'blank')\n                    }}>帮助链接</span><QuestionCircleOutlined /></div> : null\n                }\n            </TitleHeader>\n            <Content className=\"appmgmt-content bg-title\">\n                {/* <div>\n                    <img className=\"m32\" style={{ height: 42 }} src={require('../images/star2.svg').default} alt=\"\" />\n                </div> */}\n                {\n                    !!filterParams.length && <MixSearch values={filterValues} params={filterParams} onChange={(values) => {\n                        localStorage.setItem(`filter_${location.pathname}${location.search}`, JSON.stringify(values))\n                        setFilterValues(values)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfoInit,\n                            params: values,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }} />\n                }\n                {/* {\n                    tips.length ? <div className=\"bg-module mlr24 p16\">\n                        {tips.map((item, index) => {\n                            return <div key={`ADUGTemplate_tips_${index}`}><span>{labelMapRef.current[item.label] || item.label}：</span><span>{item.value}</span></div>\n                        })}\n                    </div> : null\n                } */}\n                <div className=\"m16\">\n                    <TableBox\n                        tableKey={`tablebox_${location.pathname}`}\n                        titleNode={<Col className=\"tablebox-title\">{labelTitle}列表</Col>}\n                        buttonNode={<div className=\"d-f ac\">\n                            {\n                                permissions.includes('can_add') ? <Button className=\"mr16\" type=\"primary\" onClick={() => setVisableAdd(true)}>添加{labelTitle}<PlusOutlined /></Button> : null\n                            }\n                            <div>\n                                <Dropdown overlay={<Menu>\n                                    {\n                                        multipleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_muliple_${index}`}>\n                                                <span className=\"link\" onClick={() => handleMultiRecord(action)}>\n                                                    {`批量${action.text}`}\n                                                </span>\n                                            </Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                    <Button>批量操作 <DownOutlined /></Button>\n                                </Dropdown>\n                            </div>\n                            {\n                                isImportData ? <div className=\"d-f ml16\">\n                                    <Tooltip title={<span className=\"tips-content\">注意：csv逗号分隔，第一行为列的英文名</span>} placement=\"topLeft\">\n                                        <Upload {...uploadConfig}>\n                                            <Button className=\"\" icon={<UploadOutlined />}>导入数据</Button>\n                                        </Upload>\n                                    </Tooltip>\n                                </div> : null\n                            }\n                        </div>}\n                        rowKey={(record: any) => {\n                            return JSON.stringify(record)\n                        }}\n                        columns={currentColumns}\n                        loading={loading}\n                        pagination={pageInfo}\n                        dataSource={dataList}\n                        onChange={(pageInfo: any, filters, sorter: any) => {\n                            const tarSorter = sorter.order ? {\n                                order_column: sorter.columnKey,\n                                order_direction: sorter.order === \"ascend\" ? 'asc' : 'desc'\n                            } as ISorterParam : undefined\n\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                paramsMap: filterParamsMap,\n                                sorter: tarSorter\n                            });\n                            // setPageInfo(pageInfo)\n                        }}\n                        rowSelection={{\n                            type: 'checkbox',\n                            fixed: 'left',\n                            columnWidth: 80,\n                            selectedRowKeys,\n                            onChange: (selectedRowKeys) => {\n                                setSelectedRowKeys(selectedRowKeys)\n                            }\n                        }}\n                        scroll={{ x: tableWidth, y: scrollY }}\n                    />\n                </div>\n            </Content>\n        </div >\n    );\n}\n\n"],"names":["props","Form","form","useState","updateState","React","useEffect","formData","setFieldsValue","currentChange","allValues","formChangeRes","setFormChangeRes","destroyOnClose","maskClosable","width","visible","title","okText","cancelText","onCancel","resetFields","onOk","console","log","getFieldsValue","validateFields","then","values","onCreate","catch","info","spinning","loading","onValuesChange","value","labelCol","span","wrapperCol","layout","name","children","Object","prototype","toString","call","CopyToClipboard","require","customizeRenderEmpty","justify","align","style","height","flexDirection","src","emptyImg","alt","ResizableTitle","onResize","restProps","Resizable","handle","className","onClick","e","stopPropagation","draggableOpts","enableUserSelectHack","userSelect","exportDataVisible","setExportDataVisible","header","data","dataFormat","setDataFormat","filterValue","setFilterValue","columns","cols","setCols","handleResize","index","_","size","temp","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","map","col","onHeaderCell","column","scroll","dataSource","filter","item","indexOf","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","length","join","rowKey","handleExportText","direction","centered","bodyStyle","maxHeight","overflow","footer","position","options","label","defaultValue","onChange","right","bottom","type","tab","text","onCopy","message","cursor","minHeight","option","datas","sheetData","sheetName","ExportJsonExcel","saveExcel","titleNode","buttonNode","cancelExportData","marginLeft","renderEmpty","components","cell","pagination","rowSelection","Title","Typography","styles","top","noBorderBottom","borderBottom","level","marginBottom","breadcrumbs","Option","Select","collapsed","setCollapsed","formatParamsData","indexKey","params","paramsData","setParamsData","currentParamsData","setCurrentParamsData","Map","paramsDataMap","setParamsDataMap","group","key","undefined","i","j","used","formatData","dataMap","param","set","handleFinishForm","preVal","tarVal","handleRenderValueEl","getFieldValue","onPressEnter","handlePressEnter","currentItem","get","defalutValue","placeholder","placeHolder","currentOptions","dropdownMatchSelectWidth","showSearch","mode","optionFilterProp","onFinish","initialValues","gutter","marginRight","fields","add","remove","field","compact","noStyle","rules","required","usedKey","includes","selectActionRemove","display","shouldUpdate","DeleteOutlined","PlusOutlined","flex","htmlType","DownOutlined","UpOutlined","TaskListManager","navigate","useNavigate","location","useLocation","dataList","setDataList","setLoading","loadingAdd","setLoadingAdd","visableAdd","setVisableAdd","loadingUpdate","setLoadingUpdate","visableUpdate","setVisableUpdate","loadingDetail","setLoadingDetail","visableDetail","setVisableDetail","customDialogVisable","setCustomDialogVisable","customDialogTitle","setCustomDialogTitle","customDialogContent","setCustomDialogContent","selectedRowKeys","setSelectedRowKeys","startTime","moment","subtract","startOf","format","endTime","endOf","pageInfoInit","current","pageSize","total","showSizeChanger","showQuickJumper","pageSizeOptions","showTotal","pageInfo","setPageInfo","currentColumns","setCurrentColumns","filterParams","setFilterParams","filterValues","_setFilterValues","filterValuesRef","useRef","setFilterValues","dynamicFormConfigAdd","setDynamicFormConfigAdd","dynamicFormConfigUpdate","setDynamicFormConfigUpdate","dynamicFormGroupConfigAdd","setDynamicFormGroupConfigAdd","dynamicFormGroupConfigUpdate","setDynamicFormGroupConfigUpdate","updateColumnsMap","setUpdateColumnsMap","labelMap","_setLabelMap","labelMapRef","dataDetail","setDataDetail","setTableWidth","permissions","setPermissions","filterParamsMap","setFilterParamsMap","helpUrl","setHelpUrl","baseUrl","_setBaseUrl","baseUrlRef","isImportData","setIsImportData","columnRelateFormat","setColumnRelateFormat","multipleAction","setMultipleAction","sorterParam","setSorterParam","primaryKey","setPrimaryKey","labelTitle","setLabelTitle","scrollY","setScrollY","fetchDataParams","pageConf","paramsMap","sorter","getTableScroll","url","encodeURIComponent","pathname","getCustomDialog","content","hit","err","targetId","getParam","getADUGTemplateApiInfo","list_columns","label_columns","filters","add_columns","edit_columns","description_columns","add_fieldsets","edit_fieldsets","help_url","order_columns","action","route_base","column_related","primary_key","label_title","cols_width","import_data","hasAction","related","cacheColumns","getItem","cacheColumnsWidthMap","parse","columnRelatedFormat","entries","dep","src_columns","effect","des_columns","effectOption","ePre","eNext","calculateId","src_value","des_value","listColumns","a","b","render","record","dangerouslySetInnerHTML","__html","placement","tarRes","actionList","multiple","singleAction","single","createDyFormConfig","validators","pattern","RegExp","regex","min","max","list","disable","description","default","id","tableAction","fixed","overlay","fetchDataDetail","formConfigUpdate","formGroupConfigUpdate","currentData","expanded","config","Modal","icon","ExclamationCircleOutlined","okButtonProps","danger","Promise","resolve","reject","actionADUGTemplateDelete","fetchData","confirmation","actionADUGTemplateSingle","tarColumns","addColumnsMap","formConfigAdd","formGroupConfigAdd","tarFilter","oprList","operator","currentFilterValues","localCacheFilter","search","urlFilter","error","localFilter","setLabelMap","currentTableWidth","form_data","temlateId","str_related","model_name","opr","isNaN","sourceOprList","currentOpr","page","page_size","getADUGTemplateList","result","count","finally","getADUGTemplateDetail","detail","formatValue","last_name","keys","uploadConfig","maxCount","headers","authorization","beforeUpload","file","isCSV","Upload","status","notification","response","contentWrapperStyle","onClose","ModalForm","hasOwnProperty","Array","isArray","actionADUGTemplateAdd","DynamicForm","linkageConfig","configGroup","tarIndex","split","actionADUGTemplateUpdate","TitleHeader","isSubRoute","window","reload","RollbackOutlined","crumbs","idx","open","QuestionCircleOutlined","TableBox","actionADUGTemplateMuliple","ids","handleMultiRecord","UploadOutlined","tarSorter","order","order_column","columnKey","order_direction","columnWidth","y"],"sourceRoot":""}